apiVersion: apps/v1
kind: Deployment
metadata:
  name: "{{ .Release.Name }}-back-deployment"
  namespace: {{ .Values.namespace }}
spec:
  replicas: {{ .Values.replicas }}
  selector:
    matchLabels:
      app: "{{ .Release.Name }}-back-deployment"
  template:
    metadata:
      labels:
        app: "{{ .Release.Name }}-back-deployment"
    spec:
      volumes:
      - name: "{{ .Release.Name }}-backend-pvc"  # Nom du volume correspondant au volumeMounts
        persistentVolumeClaim:
          claimName: "{{ .Release.Name }}-backend-pvc"
      containers:
      - name: "{{ .Release.Name }}-back-container"
        image: "ghcr.io/nunomars/tp/{{ .Values.backendlabel }}:{{ .Values.defaultTag }}"
        ports:
        - containerPort: 5000
        envFrom:
        - configMapRef:
            name: "{{ .Release.Name }}-backend-cm" # Nom du ConfigMap contenant les variables d'environnement
        volumeMounts:
        - name: "{{ .Release.Name }}-backend-pvc-saticfiles"  # Nom du volume correspondant au volumeMounts
          mountPath: /app/staticfiles
        volumeMounts:
        - name: "{{ .Release.Name }}-backend-pvc-media"
          mountPath: /app/media
        resources: 
          requests:
            cpu: 50m
            memory: 32Mi
          limits:
            cpu: 200m
            memory: 64Mi
        livenessProbe:
          httpGet:
            path: /healthz
            port: 5000
          initialDelaySeconds: 10
          periodSeconds: 5
status: {}

